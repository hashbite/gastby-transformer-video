on:
  push:
    branches:
      - main
  pull_request:
name: Build and Deploy
jobs:
  context:
    name: Prepare
    runs-on: [self-hosted, linux, x64]
    outputs:
      branch: ${{ steps.project-context.outputs.branch }}
      commitMsg: ${{ steps.project-context.outputs.commitMsg }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get project context
        id: project-context
        uses: zero88/gh-project-context@v1

  build:
    name: Build
    runs-on: [self-hosted, linux, x64]
    needs: context
    steps:
      - uses: actions/checkout@v2

      # Cache
      - name: Cache Gatsby public dir
        uses: hashbite/github-action-cache-local-fs@main
        id: gatsby-public
        env:
          cache-name: gatsby-public
        with:
          path: ./packages/example/public
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Gatsby .cache dir
        uses: hashbite/github-action-cache-local-fs@main
        id: gatsby-cache
        env:
          cache-name: gatsby-cache
        with:
          path: ./packages/example/.cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-
            ${{ runner.os }}-${{ env.cache-name }}-staging
            ${{ runner.os }}-${{ env.cache-name }}-main

      - name: Cache Gatsby videos
        uses: hashbite/github-action-cache-local-fs@main
        id: gatsby-video-cache
        env:
          cache-name: gatsby-video-cache
        with:
          path: ./packages/example/node_modules/.cache/gatsby-transformer-video
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-
            ${{ runner.os }}-${{ env.cache-name }}-staging
            ${{ runner.os }}-${{ env.cache-name }}-main

      - name: Cache node_modules
        uses: hashbite/github-action-cache-local-fs@main
        id: build-node_modules
        env:
          cache-name: build-node_modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-
            ${{ runner.os }}-${{ env.cache-name }}-staging
            ${{ runner.os }}-${{ env.cache-name }}-main

      # Install
      - name: Install dependencies via yarn
        run: yarn install --prefer-offline --frozen-lockfile --ignore-optional

      # Clear cache (@todo make optional with empty commit)
      - name: Clear Gatsby cache
        run: cd ./packages/example && npx gatsby clean

      # Build
      - name: Build Gatsby site
        run: cd ./packages/example && npm run build -- --verbose

  deploy:
    name: Deploy
    runs-on: [self-hosted, linux, x64]
    needs: [context, build]
    steps:
      - uses: actions/checkout@v2

      # Cache
      - name: Cache Gatsby public dir
        uses: hashbite/github-action-cache-local-fs@main
        id: gatsby-public
        env:
          cache-name: gatsby-public
        with:
          path: ./packages/example/public
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ needs.context.outputs.branch }}-${{ hashFiles('**/yarn.lock') }}

      # Deploy
      - name: "[Prod] Deploy to Netlify"
        if: github.event_name == 'push'
        run: npx netlify deploy --dir=public --debug --prod --message "${{ needs.context.outputs.commitMsg }} (${{ github.event.after }})"
        working-directory: ./packages/example
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: "[PR] Deploy to Netlify"
        id: pr-deploy
        if: github.event_name == 'pull_request'
        run: echo "::set-output name=deploy-id::$(npx netlify deploy --dir=public --debug --alias "${{ needs.context.outputs.branch }}" --message "${{github.head_ref}} - ${{ needs.context.outputs.commitMsg }} (${{ github.event.after }})" | grep "Logs:" | grep -oE "[^\/]+$")"
        working-directory: ./packages/example
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      # Report
      - name: "[PR] Deploy Status"
        uses: Sibz/github-status-action@v1.1.1
        if: github.event_name == 'pull_request'
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify Build Preview
          description: The deployment is ready. Click "Details".
          state: success
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          target_url: https://${{ steps.pr-deploy.outputs.deploy-id }}--${{ secrets.NETLIFY_NAME }}.netlify.app
